{"version":3,"sources":["Components/contactList/ContactList.module.css","Components/filter/Filter.module.css","Redux/phonebook/phonebook-actions.js","Redux/phonebook/phonebook-operations.js","Redux/phonebook/phonebook-selectors.js","Components/contactList/ContactList.js","Components/contatctForm/ContactForm.js","Components/filter/Filter.js","Components/App.js","Redux/phonebook/phonebook-reducers.js","Redux/store.js","index.js","Components/contatctForm/ContactForm.module.css"],"names":["module","exports","addContactReqest","createAction","addContactSuccess","addContactError","removeContactReqest","removeContactSuccess","removeContactError","getAllContactsReqest","getAllContactsSuccess","getAllContactsError","findContact","resetError","axios","defaults","baseURL","getAllContacts","dispatch","get","then","response","data","catch","error","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","contact","name","toLowerCase","includes","ContactList","useDispatch","useSelector","map","className","s","item","span","number","btn","type","id","onClick","delete","ContactForm","useState","setName","setNumber","contatcs","handleChange","e","target","value","isThereContact","some","form","onSubmit","preventDefault","alert","uuidv4","post","addNewContact","label","input","onChange","pattern","title","required","Filter","filterInput","App","useEffect","createReducer","action","payload","_","combineReducers","middleware","getDefaultMiddleware","store","configureStore","reducer","phonebookReducer","devTools","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.404d3411.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactList_btn__2mbew\",\"item\":\"ContactList_item__VzkxO\",\"span\":\"ContactList_span__1xdPB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3OwtF\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContactReqest = createAction('phonebook/addContactRequest');\n\nexport const addContactSuccess = createAction('phonebook/addContactSuccess');\n\nexport const addContactError = createAction('phonebook/addContactError');\n\nexport const removeContactReqest = createAction(\n  'phonebook/removeContactReqest',\n);\n\nexport const removeContactSuccess = createAction(\n  'phonebook/removeContactSuccess',\n);\n\nexport const removeContactError = createAction('phonebook/removeContactError');\n\nexport const getAllContactsReqest = createAction('phonebook/getContactsReqest');\n\nexport const getAllContactsSuccess = createAction(\n  'phonebook/getContactsSuccess',\n);\n\nexport const getAllContactsError = createAction('phonebook/getContactsError');\n\nexport const findContact = createAction('phonebook/findContact');\n\nexport const resetError = createAction('phonebook/resetError');\n","import axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  addContactReqest,\n  addContactSuccess,\n  addContactError,\n  removeContactReqest,\n  removeContactSuccess,\n  removeContactError,\n  getAllContactsReqest,\n  getAllContactsSuccess,\n  getAllContactsError,\n  resetError,\n} from './phonebook-actions';\n\naxios.defaults.baseURL = 'http://localhost:3000';\n\nexport const addNewContact = (name, number) => dispatch => {\n  const contact = { name, number, id: uuidv4() };\n\n  dispatch(addContactReqest());\n\n  axios\n    .post('/contacts', contact)\n    .then(response => dispatch(addContactSuccess(response.data)))\n    .catch(error => {\n      dispatch(resetError());\n      dispatch(addContactError(error));\n    });\n};\n\nexport const removeContact = id => dispatch => {\n  dispatch(removeContactReqest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(removeContactSuccess(id)))\n    .catch(error => {\n      dispatch(resetError());\n      dispatch(removeContactError(error));\n    });\n};\n\nexport const getAllContacts = () => dispatch => {\n  dispatch(getAllContactsReqest());\n\n  axios\n    .get('/contacts')\n    .then(response => dispatch(getAllContactsSuccess(response.data)))\n    .catch(error => {\n      dispatch(resetError());\n      dispatch(getAllContactsError(error));\n    });\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  },\n);\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeContact } from '../../Redux/phonebook/phonebook-operations';\nimport s from './ContactList.module.css';\nimport { getVisibleContacts } from '../../Redux/phonebook/phonebook-selectors';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const findContact = useSelector(getVisibleContacts);\n\n  return (\n    <ul>\n      {findContact &&\n        findContact.map(contact => {\n          return (\n            <li className={s.item} key={contact.id}>\n              <span className={s.span}>{contact.name}:</span>\n              &nbsp;\n              <span className={s.span}>{contact.number}</span>\n              <button\n                className={s.btn}\n                type=\"button\"\n                id={contact.id}\n                onClick={() => dispatch(removeContact(contact.id))}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import React, { useState } from 'react';\nimport s from './ContactForm.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addNewContact } from '../../Redux/phonebook/phonebook-operations';\nimport { getContacts } from '../../Redux/phonebook/phonebook-selectors';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contatcs = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (isThereContact(name)) {\n      return alert(`${name} has been already in contact list`);\n    }\n    dispatch(addNewContact(name, number));\n    reset();\n  };\n\n  const isThereContact = name =>\n    contatcs.some(contact => contact.name.toLowerCase() === name.toLowerCase());\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name:\n        <input\n          className={s.input}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label className={s.label}>\n        Number:\n        <input\n          className={s.input}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button className={s.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n\n","import React from 'react';\n\nimport s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { findContact } from '../../Redux/phonebook/phonebook-actions';\nimport { getFilter } from '../../Redux/phonebook/phonebook-selectors';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { value } = e.target;\n\n    dispatch(findContact(value));\n  };\n\n  return (\n    <label className={s.label}>\n      Find contacts by name:\n      <input\n        className={s.filterInput}\n        name=\"filter\"\n        type=\"text\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n\n","import React, { useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { getAllContacts } from '../Redux/phonebook/phonebook-operations';\nimport { getContacts } from '../Redux/phonebook/phonebook-selectors';\nimport ContactList from './contactList/ContactList';\nimport ContactForm from './contatctForm/ContactForm';\nimport Filter from './filter/Filter';\nimport s from './App.css';\n\nconst App = () => {\n  const dispatch = useDispatch(getContacts);\n\n  useEffect(() => {\n    dispatch(getAllContacts());\n  }, [getAllContacts]);\n\n  return (\n    <div className=\"block\">\n      <h1 className={s.title}>Phonebook</h1>\n\n      <ContactForm />\n\n      <h2 className={s.title}>Contacts</h2>\n\n      <Filter />\n\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactReqest,\n  addContactSuccess,\n  addContactError,\n  removeContactReqest,\n  removeContactSuccess,\n  removeContactError,\n  getAllContactsReqest,\n  getAllContactsSuccess,\n  getAllContactsError,\n  findContact,\n  resetError,\n} from './phonebook-actions';\n\nconst items = createReducer([], {\n  [addContactSuccess]: (state, action) => [...state, action.payload],\n  [getAllContactsSuccess]: (_, action) => action.payload,\n  [removeContactSuccess]: (state, action) =>\n    state.filter(contact => contact.id !== action.payload),\n});\n\nconst filter = createReducer('', {\n  [findContact]: (_, action) => action.payload,\n});\n\nconst error = createReducer('', {\n  [resetError]: () => '',\n  [addContactError]: (_, action) => action.payload,\n  [removeContactError]: (_, action) => action.payload,\n  [getAllContactsError]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\n\nimport phonebookReducer from './phonebook/phonebook-reducers';\n\nconst middleware = [...getDefaultMiddleware()];\n\nconst store = configureStore({\n  reducer: { contacts: phonebookReducer },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './Components/App';\nimport './index.css';\nimport store from './Redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3zA7c\",\"label\":\"ContactForm_label__27VTI\",\"btn\":\"ContactForm_btn__164Zx\"};"],"sourceRoot":""}